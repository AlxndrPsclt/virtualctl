{"mappings":"ACAA,IAAM,UAAY,aACZ,aAAe,CACnB,KACA,eACA,eACA,WACD,CAuBD,eAAe,WAAW,CAAG,EAC3B,IAAM,EAAQ,MAAM,OAAO,IAAI,CAAC,WAEhC,OAAO,AADQ,MAAM,EAAM,KAAK,CAAC,IAChB,MAAM,EACzB,CAEA,eAAe,gBAAgB,CAAG,EAChC,IAAM,EAAQ,MAAM,OAAO,IAAI,CAAC,WAChC,GAAI,CACF,IAAM,EAAQ,MAAM,MAAM,GAE1B,OADA,MAAM,EAAM,GAAG,CAAC,EAAK,EAAM,KAAK,IACzB,CACT,CAAE,MAAO,EAAG,CAEV,OADe,MAAM,EAAM,KAAK,CAAC,EAEnC,CACF,CArCA,KAAK,gBAAgB,CAAC,UAAW,MAAM,IACrC,IAAM,EAAQ,MAAM,OAAO,IAAI,CAAC,WAEhC,OADA,MAAM,EAAM,MAAM,CAAC,cACZ,KAAK,WAAW,EACzB,GAEA,KAAK,gBAAgB,CAAC,WAAY,AAAA,IAChC,KAAK,OAAO,CAAC,KAAK,EACpB,GAEA,KAAK,gBAAgB,CAAC,QAAS,MAAM,IACnC,IAAM,EAAM,EAAE,OAAO,AAGjB,CAFQ,IAAI,IAAI,EAAI,GAAG,EAEnB,MAAM,GAAK,SAAS,MAAM,CAChC,EAAE,WAAW,CAAC,WAAW,IAEzB,EAAE,WAAW,CAAC,gBAAgB,GAElC","sources":["<anon>","src/sw.js"],"sourcesContent":["const cacheName = 'virtualctl';\nconst staticAssets = [\n    './',\n    './index.html',\n    './styles.css',\n    './app.js'\n];\nself.addEventListener('install', async (e)=>{\n    const cache = await caches.open(cacheName);\n    await cache.addAll(staticAssets);\n    return self.skipWaiting();\n});\nself.addEventListener('activate', (e)=>{\n    self.clients.claim();\n});\nself.addEventListener('fetch', async (e)=>{\n    const req = e.request;\n    const url = new URL(req.url);\n    if (url.origin === location.origin) e.respondWith(cacheFirst(req));\n    else e.respondWith(networkAndCache(req));\n});\nasync function cacheFirst(req) {\n    const cache = await caches.open(cacheName);\n    const cached = await cache.match(req);\n    return cached || fetch(req);\n}\nasync function networkAndCache(req) {\n    const cache = await caches.open(cacheName);\n    try {\n        const fresh = await fetch(req);\n        await cache.put(req, fresh.clone());\n        return fresh;\n    } catch (e) {\n        const cached = await cache.match(req);\n        return cached;\n    }\n}\n\n//# sourceMappingURL=sw.js.map\n","const cacheName = 'virtualctl';\nconst staticAssets = [\n  './',\n  './index.html',\n  './styles.css',\n  './app.js',\n];\n\nself.addEventListener('install', async e => {\n  const cache = await caches.open(cacheName);\n  await cache.addAll(staticAssets);\n  return self.skipWaiting();\n});\n\nself.addEventListener('activate', e => {\n  self.clients.claim();\n});\n\nself.addEventListener('fetch', async e => {\n  const req = e.request;\n  const url = new URL(req.url);\n\n  if (url.origin === location.origin) {\n    e.respondWith(cacheFirst(req));\n  } else {\n    e.respondWith(networkAndCache(req));\n  }\n});\n\nasync function cacheFirst(req) {\n  const cache = await caches.open(cacheName);\n  const cached = await cache.match(req);\n  return cached || fetch(req);\n}\n\nasync function networkAndCache(req) {\n  const cache = await caches.open(cacheName);\n  try {\n    const fresh = await fetch(req);\n    await cache.put(req, fresh.clone());\n    return fresh;\n  } catch (e) {\n    const cached = await cache.match(req);\n    return cached;\n  }\n}\n"],"names":["cacheName","staticAssets","cacheFirst","req","cache","caches","open","cached","match","fetch","networkAndCache","fresh","put","clone","e","self","addEventListener","addAll","skipWaiting","clients","claim","request","url","URL","origin","location","respondWith"],"version":3,"file":"sw.js.map"}