{"mappings":"ACEA,IAAI,EAAS,CAAC,EAmDd,eAAe,EAAQ,CAAI,CAAE,CAAK,EAChC,GAAI,CACJ,IAAM,EAAK,SAAS,cAAc,CAAC,YAAY,KAAK,CAC5C,EAAW,MAAM,MAAM,CAAC,OAAO,EAAE,EAAG,SAAS,CAAC,CAAE,CACpD,OAAQ,OACR,QAAS,CACP,eAAgB,kBAClB,EACA,KAAM,KAAK,SAAS,CAAC,CAAE,KAAA,EAAM,MAAA,CAAM,EACrC,EAEI,AAAC,CAAA,EAAS,EAAE,EACd,QAAQ,KAAK,CAAC,sBAAuB,MAAM,EAAS,IAAI,GAE5D,CAAE,MAAO,EAAK,CACZ,QAAQ,KAAK,CAAC,uBAAwB,EACxC,CACF,CAvBI,MAAM,EAAW,SAAS,aAAa,CAAC,SACpC,CAAA,GACA,EAAS,MAAM,GAhCnB,MAAM,EAAW,SAAS,aAAa,CAAC,MACxC,CAAA,EAAS,SAAS,CAAG,QAGrB,IAAK,IAAI,EAAI,EAAG,GAqDR,IArDuB,IAAK,CAChC,IAAM,EAAO,SAAS,aAAa,CAAC,gBACpC,CAAA,EAAK,EAAE,CAAG,CAAC,IAAI,EAAE,EAAA,CAAG,CACpB,EAAK,YAAY,CAAC,MAAO,KACzB,EAAK,YAAY,CAAC,MAAO,KACzB,EAAK,YAAY,CAAC,OAAQ,SAC1B,EAAK,YAAY,CAAC,SAAU,wBAC5B,EAAK,YAAY,CAAC,QAAS,MAC3B,EAAK,YAAY,CAAC,SAAU,MAE5B,EAAS,WAAW,CAAC,EACzB,CAGA,MAAM,EAAM,SAAS,aAAa,CAAC,QAC/B,EACA,EAAI,WAAW,CAAC,GAEhB,QAAQ,KAAK,CAAC,sCAoDtB,IAAK,IAAI,EAAI,EAAG,GAAK,IAAK,IAAK,CAC7B,IAAM,EAAO,SAAS,cAAc,CAAC,CAAC,IAAI,EAAE,EAAA,CAAG,CAC3C,CAAA,GACF,EAAK,gBAAgB,CAAC,QAAS,AAAC,IAC9B,IAAM,EAAQ,WAAW,EAAM,MAAM,CAAC,KAAK,EACrC,EAAO,CAAC,aAAa,EAAE,OAAO,EAAE,QAAQ,CAAC,KAAK,QAAQ,CAAC,EAAG,KAAA,CAAM,CACtE,QAAQ,GAAG,CAAC,CAAC,aAAa,EAAE,EAAK,CAAC,EAAE,EAAA,CAAO,EAC3C,EAAQ,EAAM,EAChB,EAEJ,C,I,E,C,EAGA,eAAe,IAGb,GAFA,QAAQ,GAAG,CAAC,eACZ,QAAQ,GAAG,CAAC,WACR,kBAAmB,UACrB,GAAI,CACF,MAAM,UAAU,aAAa,CAAC,QAAQ,CAAtC,EACF,CAAE,MAAM,EAAG,CACT,QAAQ,GAAG,CAAC,sCAAuC,EACrD,CAEJ,CAEA,SAAS,EAAQ,CAAE,EACjB,EAAS,IAAI,IAAI,qBAAqB,CAAC,CAAE,KAAM,EAAI,KAAM,IAAK,GAE9D,AADM,IAAI,IAAI,CAAE,OAAQ,CAAO,GAC3B,IAAI,EACV,CCxHA,EAAiB,YAAwB,OAAO,CAAC,SD0HjD,OAAO,gBAAgB,CAAC,OAAO,KAC7B,IAAM,EAAK,SAAS,cAAc,CAAC,YAAY,KAAK,CACpD,QAAQ,GAAG,CAAC,iBACZ,QAAQ,GAAG,CAAC,GACZ,EAAQ,GACR,GACF,GAIA,AAFkB,SAAS,cAAc,CAAC,YAEhC,gBAAgB,CAAC,SAAU,AAAC,IACpC,QAAQ,GAAG,CAAC,4BACZ,QAAQ,GAAG,CAAC,EAAM,MAAM,CAAC,KAAK,EAC9B,EAAQ,EAAM,MAAM,CAAC,KAAK,CAC5B,GAKA,OAAO,cAAc,CAAG,WAAa,QAAQ,GAAG,CAAC,0BAA4B,EAE7E,OAAO,gBAAgB,CAAC,WAAY,KAClC,QAAQ,GAAG,CAAC,2BACd","sources":["<anon>","src/app.bundle.js","node_modules/@parcel/runtime-js/lib/runtime-eb6483af8514fd49.js"],"sourcesContent":["//const OSC = require('osc-js')\n//const plugin = new OSC.WebsocketClientPlugin({ host: '192.168.8.123', port: 8080 })\nvar $184c7425aa690b48$var$plugin = {};\nvar $184c7425aa690b48$var$osc = {};\n//const osc = new OSC({ plugin: plugin })\n//osc.open(); // connect by default to ws://localhost:8080\n/**\n * Creates a div with a specified number of knobs.\n * @param {number} numKnobs - The number of knobs to create.\n */ function $184c7425aa690b48$var$createKnobs(numKnobs) {\n    // Remove existing knobs div if it exists\n    $184c7425aa690b48$var$removeKnobs();\n    // Create the container div\n    const knobsDiv = document.createElement('div');\n    knobsDiv.className = 'knobs';\n    // Generate the knobs\n    for(let i = 1; i <= numKnobs; i++){\n        const knob = document.createElement('webaudio-knob');\n        knob.id = `knob${i}`;\n        knob.setAttribute('min', '0');\n        knob.setAttribute('max', '1');\n        knob.setAttribute('step', '0.001');\n        knob.setAttribute('colors', '#81a1c1;#4c566a;#444');\n        knob.setAttribute('width', '46');\n        knob.setAttribute('height', '46');\n        knobsDiv.appendChild(knob);\n    }\n    // Add the knobs div to the app container\n    const app = document.querySelector('.app');\n    if (app) app.appendChild(knobsDiv);\n    else console.error('No element with class \"app\" found.');\n}\n/**\n * Removes the knobs div from the DOM.\n */ function $184c7425aa690b48$var$removeKnobs() {\n    const knobsDiv = document.querySelector('.knobs');\n    if (knobsDiv) knobsDiv.remove();\n}\nasync function $184c7425aa690b48$var$sendOSC(path, value) {\n    try {\n        const ip = document.getElementById('hostaddr').value;\n        const response = await fetch(`http://${ip}:8080/osc`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                path: path,\n                value: value\n            })\n        });\n        if (!response.ok) console.error('Failed to send OSC:', await response.text());\n    } catch (err) {\n        console.error('HTTP request failed:', err);\n    }\n}\n//osc.open({ port: 9000 })\n$184c7425aa690b48$var$createKnobs(128);\n// Add event listeners to all knobs\n//for (let i = 1; i <= 128; i++) {\n//  const knob = document.getElementById(`knob${i}`);\n//  if (knob) {\n//    knob.addEventListener(\"input\", (event) => {\n//      const value = parseFloat(event.target.value);\n//      const path = `/virtualctl/K${String(i.toString(16)).padStart(2, \"0\")}`; // e.g., /virtualctl/k01\n//      console.log(`Sending OSC: ${path} ${value}`);\n//\n//      // Send the OSC message\n//      const message = new OSC.Message(path, parseFloat(value));\n//      osc.send(message)\n//    });\n//  }\n//}\nfor(let i = 1; i <= 128; i++){\n    const knob = document.getElementById(`knob${i}`);\n    if (knob) knob.addEventListener('input', (event)=>{\n        const value = parseFloat(event.target.value);\n        const path = `/virtualctl/K${String(i.toString(16)).padStart(2, '0')}`;\n        console.log(`Sending OSC: ${path} ${value}`);\n        $184c7425aa690b48$var$sendOSC(path, value);\n    });\n}\nvar $93fe0ca3e8a620dd$exports = {};\n$93fe0ca3e8a620dd$exports = import.meta.resolve(\"7yeQP\");\n\n\n//// Register the service worker for PWA\nasync function $184c7425aa690b48$var$registerSW() {\n    console.log(\"Registering\");\n    console.log(navigator);\n    if ('serviceWorker' in navigator) try {\n        await navigator.serviceWorker.register($93fe0ca3e8a620dd$exports);\n    } catch (e) {\n        console.log(\"Service Worker registration failed:\", e);\n    }\n}\nfunction $184c7425aa690b48$var$connect(ip) {\n    $184c7425aa690b48$var$plugin = new OSC.WebsocketClientPlugin({\n        host: ip,\n        port: 8080\n    });\n    $184c7425aa690b48$var$osc = new OSC({\n        plugin: $184c7425aa690b48$var$plugin\n    });\n    $184c7425aa690b48$var$osc.open(); // connect by default to ws://localhost:8080\n}\nwindow.addEventListener('load', ()=>{\n    const ip = document.getElementById('hostaddr').value;\n    console.log(\"C'est parti!!\");\n    console.log(ip);\n    $184c7425aa690b48$var$connect(ip);\n    $184c7425aa690b48$var$registerSW();\n});\nconst $184c7425aa690b48$var$ipElement = document.getElementById('hostaddr');\n$184c7425aa690b48$var$ipElement.addEventListener(\"change\", (event)=>{\n    console.log(\"Changed IP, reconnecting\");\n    console.log(event.target.value);\n    $184c7425aa690b48$var$connect(event.target.value);\n});\nwindow.onbeforeunload = function() {\n    console.log(\"Your work will be lost.\");\n};\nwindow.addEventListener('popstate', ()=>{\n    console.log('User clicked back button');\n});\n\n\n//# sourceMappingURL=virtualctl.github.067a21c0.js.map\n","//const OSC = require('osc-js')\n//const plugin = new OSC.WebsocketClientPlugin({ host: '192.168.8.123', port: 8080 })\nvar plugin = {};\nvar osc ={};\n//const osc = new OSC({ plugin: plugin })\n\n//osc.open(); // connect by default to ws://localhost:8080\n\n/**\n * Creates a div with a specified number of knobs.\n * @param {number} numKnobs - The number of knobs to create.\n */\nfunction createKnobs(numKnobs) {\n    // Remove existing knobs div if it exists\n    removeKnobs();\n\n    // Create the container div\n    const knobsDiv = document.createElement('div');\n    knobsDiv.className = 'knobs';\n\n    // Generate the knobs\n    for (let i = 1; i <= numKnobs; i++) {\n        const knob = document.createElement('webaudio-knob');\n        knob.id = `knob${i}`;\n        knob.setAttribute('min', '0');\n        knob.setAttribute('max', '1');\n        knob.setAttribute('step', '0.001');\n        knob.setAttribute('colors', '#81a1c1;#4c566a;#444');\n        knob.setAttribute('width', '46');\n        knob.setAttribute('height', '46');\n\n        knobsDiv.appendChild(knob);\n    }\n\n    // Add the knobs div to the app container\n    const app = document.querySelector('.app');\n    if (app) {\n        app.appendChild(knobsDiv);\n    } else {\n        console.error('No element with class \"app\" found.');\n    }\n}\n\n/**\n * Removes the knobs div from the DOM.\n */\nfunction removeKnobs() {\n    const knobsDiv = document.querySelector('.knobs');\n    if (knobsDiv) {\n        knobsDiv.remove();\n    }\n}\n\nasync function sendOSC(path, value) {\n  try {\n\t\tconst ip = document.getElementById('hostaddr').value;\n    const response = await fetch(`http://${ip}:8080/osc`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ path, value })\n    })\n\n    if (!response.ok) {\n      console.error('Failed to send OSC:', await response.text())\n    }\n  } catch (err) {\n    console.error('HTTP request failed:', err)\n  }\n}\n\n//osc.open({ port: 9000 })\n\ncreateKnobs(128);\n// Add event listeners to all knobs\n//for (let i = 1; i <= 128; i++) {\n//  const knob = document.getElementById(`knob${i}`);\n//  if (knob) {\n//    knob.addEventListener(\"input\", (event) => {\n//      const value = parseFloat(event.target.value);\n//      const path = `/virtualctl/K${String(i.toString(16)).padStart(2, \"0\")}`; // e.g., /virtualctl/k01\n//      console.log(`Sending OSC: ${path} ${value}`);\n//\n//      // Send the OSC message\n//      const message = new OSC.Message(path, parseFloat(value));\n//      osc.send(message)\n//    });\n//  }\n//}\n\nfor (let i = 1; i <= 128; i++) {\n  const knob = document.getElementById(`knob${i}`)\n  if (knob) {\n    knob.addEventListener('input', (event) => {\n      const value = parseFloat(event.target.value)\n      const path = `/virtualctl/K${String(i.toString(16)).padStart(2, '0')}`\n      console.log(`Sending OSC: ${path} ${value}`)\n      sendOSC(path, value)\n    })\n  }\n}\n\n//// Register the service worker for PWA\nasync function registerSW() {\n  console.log(\"Registering\");\n  console.log(navigator);\n  if ('serviceWorker' in navigator) {\n    try {\n      await navigator.serviceWorker.register(new URL('./sw.js', import.meta.url));\n    } catch(e) {\n      console.log(\"Service Worker registration failed:\", e);\n    }\n  }\n}\n\nfunction connect(ip) {\n  plugin = new OSC.WebsocketClientPlugin({ host: ip, port: 8080 })\n  osc = new OSC({ plugin: plugin })\n  osc.open(); // connect by default to ws://localhost:8080\n}\n\nwindow.addEventListener('load',() => {\n  const ip = document.getElementById('hostaddr').value;\n  console.log(\"C'est parti!!\");\n  console.log(ip);\n  connect(ip);\n  registerSW();\n});\n\nconst ipElement = document.getElementById('hostaddr');\n\nipElement.addEventListener(\"change\", (event) => {\n  console.log(\"Changed IP, reconnecting\");\n  console.log(event.target.value);\n  connect(event.target.value);\n});\n\n\n\n\nwindow.onbeforeunload = function() { console.log(\"Your work will be lost.\"); };\n\nwindow.addEventListener('popstate', () => {\n  console.log('User clicked back button');\n});\n","module.exports = __parcel__import__.meta.resolve(\"7yeQP\");"],"names":["$184c7425aa690b48$var$plugin","$184c7425aa690b48$var$sendOSC","path","value","ip","document","getElementById","response","fetch","method","headers","body","JSON","stringify","ok","console","error","text","err","knobsDiv","querySelector","remove","createElement","className","i","knob","id","setAttribute","appendChild","app","addEventListener","event","parseFloat","target","String","toString","padStart","log","$93fe0ca3e8a620dd$exports","$184c7425aa690b48$var$registerSW","navigator","serviceWorker","register","e","$184c7425aa690b48$var$connect","OSC","WebsocketClientPlugin","host","port","$184c7425aa690b48$var$osc","plugin","open","resolve","window","$184c7425aa690b48$var$ipElement","onbeforeunload"],"version":3,"file":"virtualctl.github.067a21c0.js.map"}